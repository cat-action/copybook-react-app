{"ast":null,"code":"\"use strict\";\n/**\n * Small wrapper to wrap your custom type check so that you can use `myCustomType.isRequired` in a similar fasion to React's built-in types.\n * \n * Usage:\n *      \n *      var type = propType(function isFoo(props, name){  \n *          if(props[name] !== \"foo\")\n *              return new TypeError(\"not a foo\");\n *      });\n * \n *      // optional by default:\n *      assert.ok( ! type(null) );\n * \n *      // required like so:\n *      assert.ok( type.isRequired(null) );\n * \n */\n\nfunction propType(typeCheck) {\n  var type = function (props, propName) {\n    if (props[propName]) return typeCheck.apply(null, arguments);\n  };\n\n  Object.defineProperty(type, \"isRequired\", {\n    get: function () {\n      return typeCheck;\n    }\n  });\n  return type;\n}\n\nmodule.exports = propType;","map":{"version":3,"sources":["E:/VSC/ReactProject/initial_project/node_modules/prop-type/index.js"],"names":["propType","typeCheck","type","props","propName","apply","arguments","Object","defineProperty","get","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,QAAT,CAAkBC,SAAlB,EAA6B;AACzB,MAAIC,IAAI,GAAG,UAASC,KAAT,EAAgBC,QAAhB,EAA0B;AACjC,QAAID,KAAK,CAACC,QAAD,CAAT,EAAqB,OAAOH,SAAS,CAACI,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAP;AACxB,GAFD;;AAIAC,EAAAA,MAAM,CAACC,cAAP,CAAsBN,IAAtB,EAA4B,YAA5B,EAA0C;AACtCO,IAAAA,GAAG,EAAE,YAAW;AACZ,aAAOR,SAAP;AACH;AAHqC,GAA1C;AAMA,SAAOC,IAAP;AACH;;AAEDQ,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["\"use strict\";\n\n/**\n * Small wrapper to wrap your custom type check so that you can use `myCustomType.isRequired` in a similar fasion to React's built-in types.\n * \n * Usage:\n *      \n *      var type = propType(function isFoo(props, name){  \n *          if(props[name] !== \"foo\")\n *              return new TypeError(\"not a foo\");\n *      });\n * \n *      // optional by default:\n *      assert.ok( ! type(null) );\n * \n *      // required like so:\n *      assert.ok( type.isRequired(null) );\n * \n */\nfunction propType(typeCheck) {\n    var type = function(props, propName) {\n        if (props[propName]) return typeCheck.apply(null, arguments);\n    };\n\n    Object.defineProperty(type, \"isRequired\", {\n        get: function() {\n            return typeCheck;\n        }\n    });\n\n    return type;\n}\n\nmodule.exports = propType;"]},"metadata":{},"sourceType":"script"}